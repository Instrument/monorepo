declare module "constelation-view" {
  declare type Base = {
    alignVertical?: 'top' | 'center' | 'bottom',
    alignHorizontal?: 'left' | 'center' | 'right',
    alignSelf?: 'auto' | 'flex-start' | 'flex-end' | 'center' | 'stretch',
    align?: 'flex-start' | 'flex-end' | 'center' | 'baseline' | 'stretch',
    justify?: 'flex-start' | 'flex-end' | 'center' | 'space-between' | 'space-around',
    animated?: boolean,
    bottom?: number,
    center?: boolean,
    absoluteFill?: boolean,

    flex?: number,
    wrap?: 'wrap' | 'nowrap',
    grow?: number | boolean,
    shrink?: number,
    basis?: number | string,

    height?: number | string,
    left?: number | string,
    margin?: number | string,
    marginBottom?: number | string,
    marginLeft?: number | string,
    marginRight?: number | string,
    marginTop?: number | string,
    marginVertical?: number | string,
    marginHorizontal?: number | string,
    maxHeight?: number | string,
    maxWidth?: number | string,
    minHeight?: number | string,
    minWidth?: number | string,
    overflow?: 'visible' | 'hidden' | 'scroll',
    padding?: number | string,
    paddingBottom?: number | string,
    paddingLeft?: number | string,
    paddingRight?: number | string,
    paddingTop?: number | string,
    paddingVertical?: number | string,
    paddingHorizontal?: number | string,
    pointerEvents?: 'box-none' | 'none' | 'box-only' | 'auto',
    position?: 'absolute' | 'relative',
    refNode?: (node?: Base) => void,
    right?: number | string,
    style?: Object,
    top?: number | string,
    width?: number | string,
    zIndex?: number,
  };

  declare class View extends React$Component<> {
    props: Base & {
      horizontal?: boolean,
      refNode?: (node?: View) => void,
    };
    render(): any;
  }
  declare class Row extends React$Component<> {
    props: Base & {
      refNode?: (node?: Row) => void,
    };
    render(): any;
  }
  declare class Col extends React$Component<> {
    props: Base & {
      refNode?: (node?: Col) => void,
    };
    render(): any;
  }

  declare export var Row: typeof Row;
  declare export var Col: typeof Col;
  declare export var View: typeof View;
  declare export default typeof View
}

